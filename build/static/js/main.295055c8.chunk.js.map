{"version":3,"sources":["reportWebVitals.js","components/user/UserTable.js","components/header/AddUserBtn.js","components/header/HeaderAppBar.js","components/form/PhoneInput.js","components/form/AddUserForm.js","components/modal/ConfirmDialog.js","components/modal/AddUserDialog.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","table","minWidth","id","first_name","last_name","email","birthday","phone","DATE_NOW","Date","now","isAdult","date","diff","getTime","Math","abs","floor","getUserAge","UserTable","props","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","data","map","row","scope","theme","root","flexGrow","AddUserBtn","handleAddUser","e","console","warn","Button","data-testid","type","variant","color","onClick","menuButton","marginRight","spacing","title","HeaderAppBar","info","Container","AppBar","position","Toolbar","Typography","PhoneInput","form","setFieldValue","field","name","newProps","Object","assign","inputProps","label","placeholder","pattern","fieldToTextField","display","flexDirection","margin","width","formControl","marginTop","formControlLabel","AddUserForm","debug","formikConfig","initialValues","onSubmit","values","a","onFormikSubmit","Promise","r","setTimeout","utils","DateFnsUtils","required","TextField","FormControl","DatePicker","ConfirmDialog","handleClickOpen","handleClose","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","paper","height","padding","control","AddUserDialog","description","onCloseModal","openModal","maxWidth","fullWidth","handleFormikSubmit","styles","tempFormCt","background","alignContent","App","state","okOpen","formOpen","users","bind","handleOnChange","handleOkOpen","handleOkClose","handleFormOpen","handleFormClose","testAdd","list","Array","from","this","setState","baseUser","length","user","newList","createUser","slice","push","log","handleTestSubmit","setOkOpen","setFormOpen","isOpen","event","newUser","addUser","DebugFooter","Grid","container","style","alignItems","justify","item","xs","clear","handleClearGrid","i","arr","React","Component","withStyles","ReactDOM","render","modalOpen","document","getElementById"],"mappings":"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","file":"static/js/main.295055c8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(\r\n  {\r\n      table: {\r\n          minWidth: 650,\r\n      },\r\n  });\r\n\r\nfunction createData(id, first_name, last_name, email, birthday, phone) {\r\n    return {id, first_name, last_name, email, birthday, phone};\r\n}\r\n\r\nconst rows = [\r\n    createData(\r\n      {\r\n          \"id\"        : 1,\r\n          \"first_name\": \"Brand\",\r\n          \"last_name\" : \"New\",\r\n          \"email\"     : \"brand@columbia.edu\",\r\n          \"birthday\"  : \"3/17/1979\",\r\n          \"phone\"     : \"204-472-9613\"\r\n      })\r\n]\r\n\r\n\r\nconst DATE_NOW    = new Date (Date.now());\r\n\r\nconst getUserAge = (birthday) => {\r\n    \r\n    const now = DATE_NOW;\r\n    \r\n    if(!(birthday instanceof Date)){\r\n        birthday = new Date(birthday);\r\n    }\r\n    \r\n    var diff =(birthday.getTime() - now.getTime()) / 1000;\r\n    diff /= (60 * 60 * 24);\r\n    \r\n    return Math.abs(Math.floor(diff/365.25));\r\n    \r\n}\r\n\r\nconst isAdult   = (date)=> {\r\n    // console.warn ('date:',date);\r\n    let res = getUserAge(date);\r\n    // console.warn (res);\r\n    return (res>18);\r\n}\r\n\r\n\r\nexport default function UserTable(props) {\r\n    \r\n    \r\n    \r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n      \r\n      <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                  <TableRow>\r\n                      <TableCell>ID</TableCell>\r\n                      <TableCell align=\"left\">First Name</TableCell>\r\n                      <TableCell align=\"left\">Last Name</TableCell>\r\n                      <TableCell align=\"left\">Email</TableCell>\r\n                      <TableCell align=\"left\">Birthday</TableCell>\r\n                      <TableCell align=\"left\">+18</TableCell>\r\n                      <TableCell align=\"left\">Phone</TableCell>\r\n                  </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                  {props.data.map((row) => (\r\n                    <TableRow key={row.id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {row.id}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.first_name}</TableCell>\r\n                        <TableCell align=\"left\">{row.last_name}</TableCell>\r\n                        <TableCell align=\"left\">{row.email}</TableCell>\r\n                        <TableCell align=\"left\">{row.birthday}</TableCell>\r\n                        <TableCell align=\"left\">{isAdult(row.birthday)? 'YES':'NO'}</TableCell>\r\n                        <TableCell align=\"left\">{row.phone}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n          </Table>\r\n      </TableContainer>\r\n    );\r\n}","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\n\r\nconst AddUserBtn = function(props) {\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const defaultCb = (e) => {\r\n        console.warn(\"[AddUserBtn]\", \"add user btn callback NOT present in props.\", e)\r\n    }\r\n    \r\n    // console.debug(classes);\r\n    \r\n    const handleAddUser = props.handleAddUser || defaultCb;\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n          <Button className     =\"appbar-user-add\"\r\n                  data-testid   =\"add-user-btn\"\r\n                  type=\"adduser\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={handleAddUser}>\r\n              \r\n              Add New User\r\n          </Button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddUserBtn;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import Modal from \"@material-ui/core/Modal\";\r\n// import SimpleModal from \"../modal/SimpleModal\";\r\n// import FormDialog from \"../modal/FormDialog\";\r\n// import Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\r\n// import DialogContent from \"@material-ui/core/DialogContent\";\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport AddUserBtn from \"./AddUserBtn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function HeaderAppBar(props) {\r\n    \r\n    console.info('[HeaderAppBar] fn > props:',props);\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Container className={classes.root}>\r\n\r\n            <AppBar position=\"static\">\r\n\r\n\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        User List\r\n                    </Typography>\r\n\r\n                    <AddUserBtn classes={classes} handleAddUser={props.handleAddUser} />\r\n\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n        </Container>\r\n    );\r\n}","import MuiTextField from \"@material-ui/core/TextField\";\r\nimport {fieldToTextField} from \"formik-material-ui\";\r\nimport React from \"react\";\r\n\r\n/**\r\n *\r\n * @param {TextFieldProps} props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction PhoneInput(props) {\r\n    \r\n    const {\r\n              form : {setFieldValue},\r\n              field: {name},\r\n          } = props;\r\n    \r\n    const override = {\r\n        inputProps: {\r\n            label      : \"Phone\",\r\n            placeholder: \"555-555-555\",\r\n            \r\n            type   : 'tel',\r\n            pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{3}\"\r\n        }\r\n    }\r\n    const newProps = Object.assign({}, props, override);\r\n    \r\n    // jsx\r\n    return <MuiTextField {...fieldToTextField(newProps)} />;\r\n}\r\n\r\nexport default PhoneInput;","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Field, Form, Formik} from 'formik';\r\n\r\nimport {TextField} from 'formik-material-ui';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormControl} from \"@material-ui/core\";\r\n\r\nimport {DatePicker,} from 'formik-material-ui-pickers';\r\n\r\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\n\r\n// Depending on the library you picked\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\n// components\r\nimport PhoneInput from \"./PhoneInput\";\r\n\r\n\r\n// helpers\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    form            : {\r\n        display      : 'flex',\r\n        flexDirection: 'column',\r\n        margin       : 'auto',\r\n        width        : 'fit-content',\r\n    },\r\n    formControl     : {\r\n        marginTop: theme.spacing(2),\r\n        width    : 400,\r\n        minWidth : 220,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    \r\n}))\r\n\r\n// class\r\nconst AddUserForm = (props) => {\r\n    \r\n    console.debug(\"[AddUserForm]\", props);\r\n    \r\n    \r\n    const classes = useStyles();\r\n    \r\n    \r\n    const formikConfig = {\r\n        \r\n        initialValues: {\r\n            first_name: 'Mark',\r\n            last_name : 'Konig',\r\n            email     : 'andy@rotar.com',\r\n            birthday  : '2000-01-01',\r\n            phone     : '049 334 034'\r\n        },\r\n        onSubmit     : async (values) => {\r\n            \r\n            props.onFormikSubmit(values);\r\n            \r\n            // setOkOpen(true);\r\n            await new Promise((r) => setTimeout(r, 4000));\r\n            // setOkOpen(false);\r\n            \r\n        }\r\n    }\r\n    \r\n    return (\r\n      <>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              \r\n              <Formik  {...formikConfig}>\r\n                  <Form className={classes.form}>\r\n                      \r\n                      <Field name=\"first_name\" required\r\n                             placeholder=\"Jane\"\r\n                             component={TextField}\r\n                             label=\"First Name\"\r\n                      />\r\n                      \r\n                      <FormControl className={classes.formControl}>\r\n                          \r\n                          <Field name=\"last_name\" placeholder=\"Doe\" component={TextField}\r\n                                 label=\"Last Name\"\r\n                                 required\r\n                          />\r\n                      </FormControl>\r\n                      \r\n                      \r\n                      <FormControl className={classes.formControl}>\r\n                          <Field\r\n                            required\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            \r\n                            component={TextField}\r\n                          />\r\n                      </FormControl>\r\n                      \r\n                      <FormControl className={classes.formControl}>\r\n                          <Field component={DatePicker} name=\"birthday\" label=\"Date\"/>\r\n                      </FormControl>\r\n                      \r\n                      <FormControl className={classes.formControl}>\r\n                          \r\n                          <Field name=\"phone\"\r\n                                 label=\"Phone\"\r\n                                 placeholder=\"555-555-555\"\r\n                          \r\n                          \r\n                                 type='tel'\r\n                                 pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{3}\"\r\n                          \r\n                                 component={PhoneInput}\r\n                                 required\r\n                          />\r\n                      </FormControl>\r\n                      \r\n                      \r\n                      <FormControl className={classes.formControl}>\r\n                          <Button type=\"submit\">Submit</Button>\r\n                      </FormControl>\r\n                  </Form>\r\n              \r\n              </Formik>\r\n          </MuiPickersUtilsProvider>\r\n      </>\r\n    )\r\n    \r\n};\r\n\r\n\r\nexport default AddUserForm;","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport React from \"react\";\r\n\r\nfunction ConfirmDialog(props) {\r\n    \r\n    const {handleClickOpen, handleClose} = props;\r\n    \r\n    return (\r\n      <div>\r\n          \r\n          <Dialog\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                  {\"Success!!\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                      User successfully added.\r\n                  </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  <Button onClick={handleClose} autoFocus>Close</Button>\r\n              </DialogActions>\r\n          </Dialog>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmDialog;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle\r\n} from \"@material-ui/core\";\r\n\r\nimport AddUserForm from \"../form/AddUserForm\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root   : {\r\n        \r\n        flexGrow: 1\r\n    },\r\n    paper  : {\r\n        \r\n        height : 240,\r\n        width  : 600,\r\n        padding: theme.spacing(2),\r\n    },\r\n    control: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction AddUserDialog(props) {\r\n    \r\n    \r\n    const {description, onCloseModal, openModal, title} = props;\r\n    \r\n    return (\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={onCloseModal}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        \r\n        maxWidth=\"xl\"\r\n        fullWidth={true}\r\n      >\r\n          <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n          <DialogContent>\r\n              \r\n              {(description)\r\n               ? <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText>\r\n               : null\r\n              }\r\n              \r\n              <AddUserForm onFormikSubmit={props.handleFormikSubmit}/>\r\n              \r\n          </DialogContent>\r\n          \r\n          {(false)\r\n           ? (<DialogActions>\r\n                <Button onClick={onCloseModal} color=\"primary\">\r\n                    Okay\r\n                </Button>\r\n            </DialogActions>)\r\n           : null\r\n          }\r\n      \r\n      </Dialog>\r\n    )\r\n}\r\n\r\nAddUserDialog.propTypes = {\r\n    description : PropTypes.string.isRequired,\r\n    onCloseModal: PropTypes.func.isRequired,\r\n    openModal   : PropTypes.bool.isRequired,\r\n    title       : PropTypes.string.isRequired\r\n};\r\n\r\nexport default AddUserDialog;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {Button, Container, Grid, Paper} from \"@material-ui/core\";\n\nimport UserTable from \"./components/user/UserTable\";\nimport HeaderAppBar from \"./components/header/HeaderAppBar\";\nimport AddUserForm from \"./components/form/AddUserForm\";\nimport ConfirmDialog from \"./components/modal/ConfirmDialog\";\nimport AddUserDialog from \"./components/modal/AddUserDialog\";\n\n/*\n * Update State\n * // Correcto\n *\n this.setState((state, props) => ({\n counter: state.counter + props.increment\n }));\n */\n\nconst styles = theme => ({\n    \n    \n    tempFormCt: {\n        background  : 'red solid',\n        alignContent: \"stretch\"\n    }\n});\n\nclass App extends React.Component {\n    \n    constructor(props) {\n        \n        super(props);\n        \n        this.state = {\n            okOpen  : false,\n            formOpen: false,\n            users   : [],\n        }\n        \n        \n        \n        \n        // // bind handlers scope\n        \n        // formik\n        this.handleFormikSubmit = this.handleFormikSubmit.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        \n        // confirm dialog\n        this.handleOkOpen = this.handleOkOpen.bind(this);\n        this.handleOkClose = this.handleOkClose.bind(this);\n        \n        // form dialog\n        this.handleFormOpen = this.handleFormOpen.bind(this);\n        this.handleFormClose = this.handleFormClose.bind(this);\n        \n        // debug\n        this.testAdd = this.testAdd.bind(this);\n        // this.handleFormSubmit   = this.handleFormSubmit.bind(this);\n        \n        console.info('[App.js] constructor', props, this);\n    }\n    \n    // life cyle methods\n    \n    // willMount, etc\n    componentDidMount() {\n        \n        const list = Array.from(this.props.users || []);\n        \n        this.setState({users: list});\n        \n        // console.clear();\n        console.info('[App.js] componentDidMount loading list:', (list));\n        \n    }\n    \n    // eo lifecyle\n\n\n// event handlers\n    \n    handleOnChange(e) {\n        console.info(\"[AppNews.js].handleOnChange\", e);\n    }\n    \n  \n    \n    handleClearGrid() {\n        // Correcto\n        this.setState((state, props) => ({\n            users: []\n        }));\n    }\n    \n    \n    // User Methods\n    \n    createUser() {\n        const baseUser = {\n            \"id\"        : this.state.users.length + 1,\n            \"first_name\": \"Brand\",\n            \"last_name\" : \"New\",\n            \"email\"     : \"brand@columbia.edu\",\n            \"birthday\"  : \"3/17/1979\",\n            \"phone\"     : \"204-472-9613\"\n        };\n        \n        return Object.assign({}, baseUser);\n    }\n    \n    addUser(user) {\n        \n        user = user || this.createUser();\n        \n        console.info('[App.js] addUser', user);\n        \n        let newList;\n        newList = this.state.users.slice();\n        newList.push(user);\n        \n        this.setState((state, props) => ({\n            users: newList\n        }));\n    }\n    \n    \n    // FORMIK METHODS\n    async handleFormikSubmit(values) {\n        console.log(\"_\");\n        console.info(\"[App.js] handleFormikSubmit \", values);\n        console.log(\">> submit : begin\");\n        \n        this.handleTestSubmit(values);\n        \n        \n        this.setOkOpen(true);\n        await new Promise((r) => setTimeout(r, 4000));\n        console.log(\">> submit : completed;\", \"\\\\n\");\n        this.setOkOpen(false);\n        this.setFormOpen(false);\n    }\n    \n    \n    // OK DIALOG\n    setOkOpen(isOpen) {\n        this.setState({okOpen: isOpen});\n    }\n    \n    handleOkOpen() {\n        this.setState({okOpen: true});\n    };\n    \n    handleOkClose() {\n        this.setState({okOpen: false});\n    };\n    \n    \n    // Form Dialog\n    \n    setFormOpen(isOpen) {\n        this.setState({formOpen: isOpen});\n    }\n    \n    handleFormOpen(e) {\n        console.info('[App.js] handleFormOpen:', {\n            scope: this,\n            event: e\n        });\n        this.setState({formOpen: true});\n    };\n    \n    handleFormClose() {\n        this.setState({formOpen: false});\n    };\n    \n    // Debug Methods\n    testAdd(e) {\n        \n        // console.clear();\n        console.info('[App.js] handleTestAdd', e);\n        // trying to add a user hardcoded\n        \n        const newUser = this.createUser();\n        \n        let newList;\n        newList = this.state.users.slice();\n        newList.push(newUser);\n        \n        \n        // Correcto\n        this.setState((state, props) => ({\n            users: newList\n        }));\n        \n        console.log(\"New resulting state\", this.state);\n    }\n    \n    \n    handleTestSubmit(values) {\n        console.warn(\"[App.js] handleTestSubmit\", {values: values, scope: this});\n        \n        let user = this.createUser();\n        user = Object.assign(user, values)\n        this.addUser(user);\n    }\n    \n    \n    \n    // Component Render\n    render() {\n        \n        \n        const DebugFooter = (props) => {\n            return (\n              <Container>\n                  <Grid container spacing={4} style={{\n                      width       : 'auto',\n                      alignItems  : 'stretch',\n                      alignContent: 'space-around',\n                      justify     : 'space-around'\n                  }}>\n                      <Grid item xs={12}>\n                          <Grid container spacing={2}>\n                              <Grid key=\"1\" item>\n                                  <Paper className={styles.paper}>\n                                      <h3>debug forced input</h3>\n                                      <form onSubmit={this.handleFormikSubmit}\n                                      >\n                                          <input type=\"text\" name=\"first_name\" required/>\n                                          <br/>\n                                          <div className=\"wrapper\">\n                                              <Button type=\"submit\">Submit</Button>\n                                              <Button type=\"button\" onClick={() => {\n                                                  console.clear();\n                                                  // console.info(\"Cleared Form\");\n                                              }}>clear[cns]\n                                              </Button>\n                                          </div>\n                                      </form>\n                                  </Paper>\n                              </Grid>\n                              <Grid key=\"2\" item>\n                                  <Paper className={styles.paper}>\n                                      <h3>debug list</h3>\n                                      <Button onClick={this.testAdd} variant='contained'>Add Test</Button>\n                                      <Button onClick={this.handleClearGrid.bind(this)} variant='contained'>Clear\n                                          Grid</Button>\n                                      <Container>\n                                          <h2>Test List</h2>\n                                          <ul>\n                                              {users.map((item, i, arr) => {\n                                                  // console.log({id:item.id, item:item,index:i});\n                                                  return (\n                                                    <li key={item.id}>`{item.id} - {item.first_name} `</li>\n                                                  )\n                                              })}\n                                          </ul>\n                                      </Container>\n                                  </Paper>\n                              </Grid>\n                              \n                              <Grid key=\"3\" item>\n                                  <Paper className={styles.paper}>\n                                      <h3>debug form</h3>\n                                      <Container>\n                                          <AddUserForm/>\n                                      </Container>\n                                  </Paper>\n                              </Grid>\n                          </Grid>\n                      </Grid>\n                  </Grid>\n              \n              </Container>\n            )\n        }\n        \n        const users = this.state.users;\n        \n        console.info('[App.js] render:', {\n            \"state.users\": this.state.users,\n            \"props.users\": this.props.users\n        });\n        \n        \n        return (\n          <div className={styles.root}>\n              \n              <header>\n                  <HeaderAppBar handleAddUser={this.handleFormOpen}/>\n              </header>\n              \n              \n              <main>\n                  <Container>\n                      <UserTable data={users}/>\n                  </Container>\n              </main>\n              \n              <footer style={{padding: 20}}>\n                  <DebugFooter />\n              </footer>\n              \n              \n              <ConfirmDialog open={this.state.okOpen}\n                             handleClickOpen={this.handleOkOpen}\n                             handleClose={this.handleOkClose}/>\n              \n              \n              <AddUserDialog openModal={this.state.formOpen}\n                             onCloseModal={this.handleFormClose}\n              \n                             handleFormikSubmit={this.handleFormikSubmit}\n              \n                             title='Add User'\n                             description=''\n              />\n          \n          \n          </div>\n        );\n        \n    }\n}\n\n/*\n \n <\n */\n\nApp.propTypes = {\n    users: PropTypes.array\n};\n\nexport default withStyles(styles)(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport App from \"./App\";\nimport data from \"./data/users.json\";\n\nimport './index.css';\n\nReactDOM.render(\n  \n      \n      <App users={data} modalOpen={false} />\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}